C51 COMPILER V9.60.0.0   STC12MUTI                                                         02/03/2020 03:11:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC12MUTI
OBJECT MODULE PLACED IN .\Objects\stc12muti.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE stc12muti.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\stc12muti.lst) TABS(2) OBJECT(.\Objects\stc12muti.obj)

line level    source

   1          /*********************************************************************** 
   2          时间：2012.11.24 
   3          芯片：STC12C5A60S2 
   4          晶振：22.1184MHz   波特率：9600bps 
   5          引脚定义：串行口1：  发送————TxD/P3.1； 接收————RxD/P3.0 
   6                    串行口2： 发送————TxD2/P1.3；接收————RxD2/P1.2 
   7          功能描述：STC12双串口通信（中断方式） 
   8                    当串行口1接收数据后，将此数据由串行口2发送出去 
   9                    当串行口2接收数据后，将此数据由串行口1发送出去 
  10          ***********************************************************************/  
  11          #include<STC12C5A60S2.h>  
  12          #define S2RI 0x01   //串口2接收中断请求标志位  
  13          #define S2TI 0x02   //串口2发送中断请求标志位  
  14          unsigned char flag1,flag2,temp1,temp2;  
  15          unsigned char BUF[8]={0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}; //8 bits per pkt
  16          unsigned char RES[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  17          int reading=-1;
  18          int cnt=-1;
  19          int uploading=-1;
  20          unsigned char addr1=0x01;
  21          bit getAddr=0;
  22          /****************串行口初始化函数****************/  
  23          void InitUART(void)  
  24          {  /*
  25   1          TMOD = 0x20;    //定时器1工作在方式2  8位自动重装  
  26   1          //SCON = 0x50;    //串口1工作在方式1  10位异步收发 REN=1允许接收  
  27   1          SCON=0Xf0;  //设置为工作方式3,打开接收允许位
  28   1          SM2=1;//直接收地址帧
  29   1          //TH1 = 0xFA;    //定时器1初值  
  30   1          TH1 = 0xFD;
  31   1          TL1 = TH1;  
  32   1          TR1 = 1;       //定时器1开始计数  
  33   1          EA =1;  //开总中断  
  34   1          ES =1;  //开串口1中断  
  35   1      */
  36   1         TMOD=0x20; //定时器1工作于方式2
  37   1         TH1=0xfd;  
  38   1         TL1=0xfd; //波特率为9600
  39   1         PCON=0;
  40   1         SCON=0xd0;  //串口工作于方式3
  41   1         TR1=1;  //开启定时器
  42   1         TI=0;
  43   1         RI=0;
  44   1         EA =1;  //开总中断  
  45   1         ES =1;  //开串口1中断    
  46   1        /*
  47   1          PCON &= 0x7F;   //波特率不倍速
  48   1        //SCON = 0x50;    //8位数据,可变波特率
  49   1        SCON = 0xD0;    //9位数据,可变波特率
  50   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  51   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  52   1        TMOD &= 0x0F;   //清除定时器1模式位
  53   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  54   1        TL1 = 0xDC;   //设定定时初值
C51 COMPILER V9.60.0.0   STC12MUTI                                                         02/03/2020 03:11:17 PAGE 2   

  55   1        TH1 = 0xDC;   //设定定时器重装值
  56   1        ET1 = 0;    //禁止定时器1中断
  57   1        TR1 = 1;    //启动定时器1
  58   1            EA =1;  //开总中断  
  59   1          ES =1;  //开串口1中断  
  60   1          */
  61   1        /*
  62   1          S2CON = 0x50;   //串口2工作在方式1  10位异步收发 S2REN=1允许接收  
  63   1          //BRT = 0xFA;    //独立波特率发生器初值  
  64   1          BRT = 0xFD;
  65   1          //AUXR = 0x10;    //BRTR=1 独立波特率发生器开始计数  
  66   1          AUXR &= 0xf7;
  67   1          AUXR |= 0x04;
  68   1          AUXR |= 0x10;
  69   1        */
  70   1          AUXR &= 0xF7;   //波特率不倍速
  71   1          S2CON = 0x50;   //8位数据,可变波特率
  72   1          AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
  73   1          BRT = 0xDC;   //设定独立波特率发生器重装值
  74   1          AUXR |= 0x10;   //启动独立波特率发生器
  75   1          
  76   1          IE2 =0x01;  //开串口2中断  ES2=1  
  77   1          
  78   1      
  79   1      }  
  80          /****************串行口1发送****************/  
  81          void UART_1SendOneByte(unsigned char c)  
  82          {
  83   1          TB8=0;  
  84   1          SBUF = c;  
  85   1          while(!TI);    //若TI=0，在此等待  
  86   1          TI = 0;    
  87   1      }  
  88          /****************串行口2发送****************/  
  89          void UART_2SendOneByte(unsigned char c)  
  90          {  
  91   1          S2BUF = c;  
  92   1          while(!(S2CON&S2TI));  //若S2TI=0，在此等待  
  93   1          S2CON&=~S2TI;     //S2TI=0  
  94   1      }
  95          //void UART_2SendOnePkt(unsigned )  
  96          void copy_arr(unsigned char *from,unsigned char *to)
  97          {
  98   1        int i=0;
  99   1        for (i=0;i<8;i++)
 100   1        {   
 101   2           *to=*from;
 102   2           to++;
 103   2           from++; 
 104   2        }
 105   1      }
 106          void Uart_1SendPkt(unsigned char pkt[8])
 107          {
 108   1        int i=0;
 109   1        for (i=0;i<8;i++){
 110   2            UART_1SendOneByte(pkt[i]);
 111   2        }
 112   1      } 
 113          void UART_1Listen(void)
 114          {
 115   1        SM2=1;
 116   1        if(RI==1)  
C51 COMPILER V9.60.0.0   STC12MUTI                                                         02/03/2020 03:11:17 PAGE 3   

 117   1          {  
 118   2              RI=0;  
 119   2              //flag1=1;  
 120   2              //temp1=SBUF;
 121   2              UART_1SendOneByte(0xff);//got ri
 122   2              if(RB8)
 123   2              {
 124   3                flag1=1;
 125   3                temp1=SBUF;
 126   3                UART_1SendOneByte(0x00);//got rb8
 127   3                if (temp1==addr1)
 128   3                {
 129   4                  //UART_1SendOneByte(addr1);
 130   4                  SM2=0;//中断地址和数据
 131   4                  getAddr=1;
 132   4                  while(reading==1);
 133   4                  Uart_1SendPkt(BUF);
 134   4                  SM2=1;
 135   4                }
 136   3                else
 137   3                {
 138   4                  SM2=1;//只中断地址帧
 139   4                  getAddr=0;
 140   4                }
 141   3              }
 142   2              /*
 143   2              else if (getAddr)
 144   2              {
 145   2                uploading=1;
 146   2              }
 147   2              else if(!getAddr)
 148   2              {
 149   2                uploading=0;
 150   2              }*/
 151   2        
 152   2          }  
 153   1      } 
 154          /*****************主函数******************/  
 155          void main(void)  
 156          {  
 157   1          InitUART(); //串行口初始化  
 158   1          
 159   1          while(1)  
 160   1          {
 161   2          //UART_1SendOneByte(0xbb);      
 162   2          UART_1Listen();
 163   2          //if(reading==0 && uploading==1)
 164   2          //  Uart_1SendPkt(RES);
 165   2              //如果串口1接收到数据，将此数据由串口2发送  
 166   2              /*
 167   2              if(flag1==1)  
 168   2              {  
 169   2                  flag1=0;  
 170   2                  UART_2SendOneByte(temp1);  
 171   2              }  */
 172   2                
 173   2              //如果串口2接收到数据，将此数据由串口1发送
 174   2              //从机连续发包，直到主机要求停止
 175   2              //UART_1SendOneByte(temp2); 
 176   2             /* if(flag2==1)
 177   2              {  
 178   2                  //UART_1SendOneByte(temp2);
C51 COMPILER V9.60.0.0   STC12MUTI                                                         02/03/2020 03:11:17 PAGE 4   

 179   2                  flag2=0;
 180   2                  if(uploading==1){         
 181   2                      UART_1SendOneByte(temp2); 
 182   2                  }             
 183   2                
 184   2                  if (temp2==0xaa){
 185   2                    //UART_1SendOneByte(0xaa);
 186   2                    reading=1;
 187   2                    cnt=0;
 188   2                    while(reading==1){
 189   2                        //UART_1SendOneByte(temp2);
 190   2                        Uart_1SendPkt(BUF);
 191   2                        BUF[cnt]=temp2;
 192   2                        cnt++;
 193   2                        if(cnt==8)      //读完8位结束
 194   2                        {
 195   2                            reading=0;
 196   2                            if (temp2==0x55)  
 197   2                                copy_arr(BUF,RES);
 198   2                        }
 199   2                        while(flag2==0);//等待串口来数据->temp2
 200   2      
 201   2                    }
 202   2                    }
 203   2              }  */
 204   2              //Uart_1SendPkt(RES);
 205   2              //UART_1SendOneByte(0xaa);
 206   2              //Uart_1SendPkt(BUF);
 207   2      }
 208   1      }
 209          
 210          /************串行口1中断处理函数*************/  
 211          /*
 212          void UART_1Interrupt(void) interrupt 4  
 213          {  
 214              if(RI==1)  
 215              {  
 216                  RI=0;  
 217                  flag1=1;  
 218                  temp1=SBUF;
 219                  UART_1SendOneByte(0x88);//got ri
 220                  if(RB8)
 221                  {
 222                    UART_1SendOneByte(0x99);//got rb8
 223                    if (temp1==addr1)
 224                    {
 225                      UART_1SendOneByte(addr1);
 226                      SM2=0;//中断地址和数据
 227                      getAddr=1;
 228                    }
 229                    else
 230                    {
 231                      SM2=1;//只中断地址帧
 232                      getAddr=0;
 233                    }
 234                  }
 235                  else if (getAddr)
 236                  {
 237                    uploading=1;
 238                  }
 239                  else if(!getAddr)
 240                  {
C51 COMPILER V9.60.0.0   STC12MUTI                                                         02/03/2020 03:11:17 PAGE 5   

 241                    uploading=0;
 242                  }
 243            
 244              }  
 245          }  */
 246          /************串行口2中断处理函数*************/  
 247          void UART_2Interrupt(void) interrupt 8  
 248          {  
 249   1          if(S2CON&S2RI)  
 250   1          {  
 251   2              S2CON&=~S2RI;  
 252   2              flag2=1;  
 253   2              temp2=S2BUF;  
 254   2          if (temp2==0xaa){
 255   3            reading=1;//读取中
 256   3            cnt=0;
 257   3            BUF[cnt]=temp2;
 258   3            cnt++;
 259   3          }
 260   2          else if(cnt>0 && cnt<7)
 261   2          {
 262   3            BUF[cnt]=temp2;
 263   3            cnt++;
 264   3          }
 265   2          else if(cnt==7)
 266   2          {
 267   3            cnt=0;
 268   3            if(temp2==0x55){
 269   4              BUF[7]=temp2;
 270   4              copy_arr(BUF,RES);
 271   4              reading=0;//读结束
 272   4            }
 273   3            //else
 274   3            //  reading=1;
 275   3          }
 276   2              //UART_1SendOneByte(temp2); 
 277   2          }   
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
