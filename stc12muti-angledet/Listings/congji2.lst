C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CONGJI2
OBJECT MODULE PLACED IN .\Objects\congji2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE congji2.c OPTIMIZE(8,SPEED) PRINT(.\Listings\congji2.lst) TABS(2) OBJECT
                    -(.\Objects\congji2.obj)

line level    source

   1          /*********************************************************************** 
   2          时间：2012.11.24 
   3          芯片：STC12C5A60S2 
   4          晶振：22.1184MHz   波特率：9600bps 
   5          引脚定义：串行口1：  发送————TxD/P3.1； 接收————RxD/P3.0 
   6                    串行口2： 发送————TxD2/P1.3；接收————RxD2/P1.2 
   7          功能描述：STC12双串口通信（中断方式） 
   8                    当串行口1接收数据后，将此数据由串行口2发送出去 
   9                    当串行口2接收数据后，将此数据由串行口1发送出去 
  10          ***********************************************************************/  
  11          #include<STC12C5A60S2.h>  
  12          #define S2RI 0x01   //串口2接收中断请求标志位  
  13          #define S2TI 0x02   //串口2发送中断请求标志位  
  14          unsigned char flag1,flag2,temp1,temp2;  
  15          unsigned char BUF[8]={0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}; //8 bits per pkt
  16          unsigned char RES[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  17          int reading=-1;
  18          int cnt=-1;
  19          int uploaded=-1;
  20          unsigned char addr1=0x02;
  21          bit getAddr=0;
  22          /****************串行口初始化函数****************/  
  23          void InitUART(void)  
  24          {  /*
  25   1          TMOD = 0x20;    //定时器1工作在方式2  8位自动重装  
  26   1          //SCON = 0x50;    //串口1工作在方式1  10位异步收发 REN=1允许接收  
  27   1          SCON=0Xf0;  //设置为工作方式3,打开接收允许位
  28   1          SM2=1;//直接收地址帧
  29   1          //TH1 = 0xFA;    //定时器1初值  
  30   1          TH1 = 0xFD;
  31   1          TL1 = TH1;  
  32   1          TR1 = 1;       //定时器1开始计数  
  33   1          EA =1;  //开总中断  
  34   1          ES =1;  //开串口1中断  
  35   1      */
  36   1         TMOD=0x20; //定时器1工作于方式2
  37   1         TH1=0xfd;  
  38   1         TL1=0xfd; //波特率为9600
  39   1         PCON=0;
  40   1         SCON=0xd0;  //串口工作于方式3
  41   1         SM2=1;//直接收地址帧
  42   1         TR1=1;  //开启定时器
  43   1         TI=0;
  44   1         RI=0;
  45   1         EA =1;  //开总中断  
  46   1         ES =1;  //开串口1中断    
  47   1        /*
  48   1          PCON &= 0x7F;   //波特率不倍速
  49   1        //SCON = 0x50;    //8位数据,可变波特率
  50   1        SCON = 0xD0;    //9位数据,可变波特率
  51   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  52   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  53   1        TMOD &= 0x0F;   //清除定时器1模式位
  54   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 2   

  55   1        TL1 = 0xDC;   //设定定时初值
  56   1        TH1 = 0xDC;   //设定定时器重装值
  57   1        ET1 = 0;    //禁止定时器1中断
  58   1        TR1 = 1;    //启动定时器1
  59   1            EA =1;  //开总中断  
  60   1          ES =1;  //开串口1中断  
  61   1          */
  62   1        /*
  63   1          S2CON = 0x50;   //串口2工作在方式1  10位异步收发 S2REN=1允许接收  
  64   1          //BRT = 0xFA;    //独立波特率发生器初值  
  65   1          BRT = 0xFD;
  66   1          //AUXR = 0x10;    //BRTR=1 独立波特率发生器开始计数  
  67   1          AUXR &= 0xf7;
  68   1          AUXR |= 0x04;
  69   1          AUXR |= 0x10;
  70   1        */
  71   1          AUXR &= 0xF7;   //波特率不倍速
  72   1          S2CON = 0x50;   //8位数据,可变波特率
  73   1          AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
  74   1          BRT = 0xDC;   //设定独立波特率发生器重装值
  75   1          AUXR |= 0x10;   //启动独立波特率发生器
  76   1          
  77   1          IE2 =0x01;  //开串口2中断  ES2=1  
  78   1          
  79   1      
  80   1      }  
  81          /****************串行口1发送****************/  
  82          void UART_1SendOneByte(unsigned char c)  
  83          {
  84   1          TB8=0;  
  85   1          SBUF = c;  
  86   1          while(!TI);    //若TI=0，在此等待  
  87   1          TI = 0;    
  88   1      }  
  89          /****************串行口2发送****************/  
  90          void UART_2SendOneByte(unsigned char c)  
  91          {  
  92   1          S2BUF = c;  
  93   1          while(!(S2CON&S2TI));  //若S2TI=0，在此等待  
  94   1          S2CON&=~S2TI;     //S2TI=0  
  95   1      }
  96          //void UART_2SendOnePkt(unsigned )  
  97          void copy_arr(unsigned char *from,unsigned char *to)
  98          {
  99   1        int i=0;
 100   1        for (i=0;i<8;i++)
 101   1        {   
 102   2           *to=*from;
 103   2           to++;
 104   2           from++; 
 105   2        }
 106   1      }
 107          void Uart_1SendPkt(unsigned char pkt[8])
 108          {
 109   1        int i=0;
 110   1        for (i=0;i<8;i++){
 111   2            UART_1SendOneByte(pkt[i]);
 112   2        }
 113   1      } 
 114          void UART_1Listen(void)
 115          {
 116   1        SM2=1;
C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 3   

 117   1        if(RI==1)  
 118   1          {  
 119   2              RI=0;  
 120   2              //flag1=1;  
 121   2              //temp1=SBUF;
 122   2              //UART_1SendOneByte(0xff);//got ri
 123   2              if(RB8)
 124   2              {
 125   3                flag1=1;
 126   3                temp1=SBUF;
 127   3                //UART_1SendOneByte(0x00);//got rb8
 128   3                if (temp1==addr1)
 129   3                {
 130   4                  //UART_1SendOneByte(addr1);
 131   4                  SM2=0;//中断地址和数据
 132   4                  getAddr=1;
 133   4                  while(reading==1);
 134   4                  Uart_1SendPkt(BUF);
 135   4                  SM2=1;
 136   4                }
 137   3                else
 138   3                {
 139   4                  SM2=1;//只中断地址帧
 140   4                  getAddr=0;
 141   4                }
 142   3              }
 143   2              /*
 144   2              else if (getAddr)
 145   2              {
 146   2                uploading=1;
 147   2              }
 148   2              else if(!getAddr)
 149   2              {
 150   2                uploading=0;
 151   2              }*/
 152   2        
 153   2          }  
 154   1      } 
 155          /*****************主函数******************/  
 156          void main(void)  
 157          {  
 158   1          InitUART(); //串行口初始化  
 159   1          
 160   1          while(1)  
 161   1          {
 162   2            //UART_1SendOneByte(0xbb);      
 163   2          //UART_1Listen();
 164   2          //if(reading==0 && uploading==1)
 165   2          //  Uart_1SendPkt(RES);
 166   2              //如果串口1接收到数据，将此数据由串口2发送  
 167   2              /*
 168   2              if(flag1==1)  
 169   2              {  
 170   2                  flag1=0;  
 171   2                  UART_2SendOneByte(temp1);  
 172   2              }  */
 173   2                
 174   2              //如果串口2接收到数据，将此数据由串口1发送
 175   2              //从机连续发包，直到主机要求停止
 176   2              //UART_1SendOneByte(temp2); 
 177   2             /* if(flag2==1)
 178   2              {  
C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 4   

 179   2                  //UART_1SendOneByte(temp2);
 180   2                  flag2=0;
 181   2                  if(uploading==1){         
 182   2                      UART_1SendOneByte(temp2); 
 183   2                  }             
 184   2                
 185   2                  if (temp2==0xaa){
 186   2                    //UART_1SendOneByte(0xaa);
 187   2                    reading=1;
 188   2                    cnt=0;
 189   2                    while(reading==1){
 190   2                        //UART_1SendOneByte(temp2);
 191   2                        Uart_1SendPkt(BUF);
 192   2                        BUF[cnt]=temp2;
 193   2                        cnt++;
 194   2                        if(cnt==8)      //读完8位结束
 195   2                        {
 196   2                            reading=0;
 197   2                            if (temp2==0x55)  
 198   2                                copy_arr(BUF,RES);
 199   2                        }
 200   2                        while(flag2==0);//等待串口来数据->temp2
 201   2      
 202   2                    }
 203   2                    }
 204   2              }  */
 205   2              //Uart_1SendPkt(RES);
 206   2              //UART_1SendOneByte(0xaa);
 207   2              //Uart_1SendPkt(BUF);
 208   2      }
 209   1      }
 210          
 211          /************串行口1中断处理函数*************/  
 212          void UART_1Interrupt(void) interrupt 4
 213          {
 214   1        ES=0;
 215   1        if(RI==1)
 216   1        {
 217   2          RI=0;
 218   2          temp1=SBUF;
 219   2          if(RB8)
 220   2              {       
 221   3                //UART_1SendOneByte(0x00);//got rb8
 222   3                if (temp1==addr1)
 223   3                {
 224   4                  //UART_1SendOneByte(addr1);
 225   4                  SM2=1;//中断地址
 226   4                  getAddr=1;
 227   4                  if (uploaded==0)
 228   4                    Uart_1SendPkt(BUF);
 229   4                    uploaded=1;
 230   4                }
 231   3                else
 232   3                {
 233   4                  SM2=1;//只中断地址帧
 234   4                  getAddr=0;
 235   4                }
 236   3              }
 237   2      
 238   2        }
 239   1        ES=1;
 240   1      }
C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 5   

 241          /*
 242          void UART_1Interrupt(void) interrupt 4  
 243          {  
 244              if(RI==1)  
 245              {  
 246                  RI=0;  
 247                  flag1=1;  
 248                  temp1=SBUF;
 249                  UART_1SendOneByte(0x88);//got ri
 250                  if(RB8)
 251                  {
 252                    UART_1SendOneByte(0x99);//got rb8
 253                    if (temp1==addr1)
 254                    {
 255                      UART_1SendOneByte(addr1);
 256                      SM2=0;//中断地址和数据
 257                      getAddr=1;
 258                    }
 259                    else
 260                    {
 261                      SM2=1;//只中断地址帧
 262                      getAddr=0;
 263                    }
 264                  }
 265                  else if (getAddr)
 266                  {
 267                    uploading=1;
 268                  }
 269                  else if(!getAddr)
 270                  {
 271                    uploading=0;
 272                  }
 273            
 274              }  
 275          }  */
 276          /************串行口2中断处理函数*************/  
 277          void UART_2Interrupt(void) interrupt 8  
 278          {  
 279   1          if(S2CON&S2RI)  
 280   1          {  
 281   2              S2CON&=~S2RI;  
 282   2              flag2=1;  
 283   2              temp2=S2BUF;  
 284   2          if (temp2==0xaa){
 285   3            reading=1;//读取中
 286   3            cnt=0;
 287   3            BUF[cnt]=temp2;
 288   3            cnt++;
 289   3          }
 290   2          else if(cnt>0 && cnt<7)
 291   2          {
 292   3            BUF[cnt]=temp2;
 293   3            cnt++;
 294   3          }
 295   2          else if(cnt==7)
 296   2          {
 297   3            cnt=0;
 298   3            if(temp2==0x55){
 299   4              BUF[7]=temp2;
 300   4              copy_arr(BUF,RES);
 301   4              uploaded=0;
 302   4              reading=0;//读结束
C51 COMPILER V9.60.0.0   CONGJI2                                                           02/10/2020 14:20:35 PAGE 6   

 303   4            }
 304   3            //else
 305   3            //  reading=1;
 306   3          }
 307   2              //UART_1SendOneByte(temp2); 
 308   2          }   
 309   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    506    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
