//****************DS18b20sb**************************************************
void delay(unsigned char i)
{
	for(i;i>0;i--);
}

void delay1(uchar i)
{
	uchar j,k; 
	for(j=i;j>0;j--)
		for(k=125;k>0;k--);
}

void Init_DS18B20(void) 
{
	unsigned char x=0;
	DQ=1; 					//DQ先置高 
	delay(8); 				//稍延时
	DQ=0; 					//发送复位脉冲 
	delay(80); 				//延时（>480us) 
	DQ=1; 					//拉高数据线 
	delay(5); 				//等待（15~60us) 
	x=DQ; 					//用X的值来判断初始化有没有成功，18B20存在的话X=0，否则X=1 
	//UART_2SendOneByte(x);
	delay(20); 
}

//读一个字节
ReadOneChar(void)  			//主机数据线先从高拉至低电平1us以上，再使数据线升为高电平，从而产生读信号
{
	unsigned char i=0; 		//每个读周期最短的持续时间为60us，各个读周期之间必须有1us以上的高电平恢复期
	unsigned char dat=0; 
	for (i=8;i>0;i--) 		//一个字节有8位 
	{
		DQ=1; 
		delay(1); 
		DQ=0;
		dat>>=1; 
		DQ=1; 
		if(DQ) 
		dat|=0x80; 
		delay(4);
	} 
	return(dat);
}

//写一个字节
void WriteOneChar(unsigned char dat) 
{ 
	unsigned char i=0; 		//数据线从高电平拉至低电平，产生写起始信号。15us之内将所需写的位送到数据线上，
	for(i=8;i>0;i--) 		//在15~60us之间对数据线进行采样，如果是高电平就写1，低写0发生。 
	{
		DQ=0; 				//在开始另一个写周期前必须有1us以上的高电平恢复期。 
		DQ=dat&0x01; 
		delay(5); 
		DQ=1; 
		dat>>=1;
	} 
	delay(4);
}

//读温度值（低位放tempL;高位放tempH;）
void ReadTemperature(void) 
{ 
	Init_DS18B20(); 					//初始化
	WriteOneChar(0xcc); 				//跳过读序列号的操作
	WriteOneChar(0x44); 				//启动温度转换
	delay(125); 						//转换需要一点时间，延时 
	Init_DS18B20(); 					//初始化
	WriteOneChar(0xcc); 				//跳过读序列号的操作 
	WriteOneChar(0xbe); 				//读温度寄存器（头两个值分别为温度的低位和高位） 
	tempL=ReadOneChar(); 				//读出温度的低位LSB
	tempH=ReadOneChar(); 				//读出温度的高位MSB
	//UART_2SendOneByte(tempL);
	//UART_2SendOneByte(tempH);
/*	
	if(tempH>0x7f)      				//最高位为1时温度是负
	{
		tempL=~tempL;					//补码转换，取反加一
		tempH=~tempH+1;       
		fg=0;      						//读取温度为负时fg=0
	}
	sdata = tempL/16+tempH*16;      	//整数部分
	xiaoshu1 = (tempL&0x0f)*10/16; 		//小数第一位
	xiaoshu2 = (tempL&0x0f)*100/16%10;	//小数第二位
	xiaoshu=xiaoshu1*10+xiaoshu2; 		//小数两位
	*/
}
float gettemp(void)
{
	float result=-1;
	ReadTemperature();
	result=sdata/1.0+xiaoshu/100.0;
	if (fg==1)
		return result;
	if (fg==0)
		return -result;
}
//****************END*********************************************************




//new***************************************************
//**************************************************
//DS18B20对时间要求很严,但只能长不能短
void delay_18B20(unsigned int i)
{
        while(i--);
}

/**********ds18b20初始化函数**********************/

void Init_DS18B20(void)
{
         unsigned char x=0;
         DQ = 1;          //DQ复位
         delay_18B20(8);  //稍做延时
         DQ = 0;          //单片机将DQ拉低
         delay_18B20(80); //精确延时 大于 480us
         DQ = 1;          //拉高总线
         delay_18B20(14);
         x=DQ;            //稍做延时后 如果x=0则初始化成功 x=1则初始化失败
         delay_18B20(20);
}

/***********ds18b20读一个字节**************/  

unsigned char ReadOneChar(void)
{
        unsigned char i=0;
        unsigned char dat = 0;
        for (i=8;i>0;i--)
         {
                   _nop_();   //保证两次读操作时间间隔1us以上
                  DQ = 0; // 给脉冲信号
                  _nop_(); //保证主机拉低总线1μs以上
                  dat>>=1;
                   DQ = 1; // 给脉冲信号
                  if(DQ)     //主机对总线采样的数 判断
                  dat|=0x80;
                 
                  delay_18B20(4);  //等待读操作结束
         }
        return(dat);
}

/*************ds18b20写一个字节****************/  

void WriteOneChar(unsigned char dat)
{
        unsigned char i=0;
        for (i=8; i>0; i--)
        {
                _nop_();   //保证两次写操作时间间隔1us以上
                DQ = 0;   
                _nop_(); //保证主机拉低总线1μs以上
                DQ = dat&0x01;  //向总线写入数据
                delay_18B20(5);          //写时间间隙必须最少持续60us
                DQ = 1;
                dat>>=1;
           
}
}

/**************读取ds18b20当前温度************/

void ReadTemperature()
{       
        Init_DS18B20();
        WriteOneChar(0xCC);            // 跳过读序号列号的操作
        WriteOneChar(0x4E);         // //写入"写暂存器"命令,修改TH和TL和分辩率配置寄存器
                                                        //先写TH,再写TL,最后写配置寄存器
        WriteOneChar(0x6e);                //写入想设定的温度报警上限
        WriteOneChar(0x00);                //写入想设定的温度报警下限
        WriteOneChar(0x3f);                //写配置寄存器,格式为0 R1 R0 1,1 1 1 1
                                                        //R1R0=00分辨率娄9位,R1R0=11分辨率为12位  */

        delay_18B20(80);       // this message is wery important
        Init_DS18B20();
        WriteOneChar(0xCC);            // 跳过读序号列号的操作
        WriteOneChar(0x44);         // 启动温度转换

        delay_18B20(80);       // this message is wery important
        Init_DS18B20();
        WriteOneChar(0xCC);         //跳过读序号列号的操作
        WriteOneChar(0xBE);         //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
        delay_18B20(80);

        tempL=ReadOneChar();            //读取温度值低位
        tempH=ReadOneChar();                   //读取温度值高位
  
}

//**************************************************